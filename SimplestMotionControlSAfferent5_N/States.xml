<SaveProperties ModelName="Model">
	<Model Class="NModel">
		<State/>
		<Components>
			<WPhysicalManipulator Class="NWPhysicalManipulator">
				<State>
					<AngleSpeed Type="double" PType="258">0</AngleSpeed>
					<AnglesHistoryTime Type="double" PType="258">0.3</AnglesHistoryTime>
					<AnglesTimes Type="std::vector" Size="61" PType="258">
						<elem Type="unsigned int">519822475</elem>
						<elem Type="unsigned int">519822475</elem>
						<elem Type="unsigned int">519822475</elem>
						<elem Type="unsigned int">519822491</elem>
						<elem Type="unsigned int">519822491</elem>
						<elem Type="unsigned int">519822491</elem>
						<elem Type="unsigned int">519822506</elem>
						<elem Type="unsigned int">519822506</elem>
						<elem Type="unsigned int">519822506</elem>
						<elem Type="unsigned int">519822522</elem>
						<elem Type="unsigned int">519822522</elem>
						<elem Type="unsigned int">519822522</elem>
						<elem Type="unsigned int">519822522</elem>
						<elem Type="unsigned int">519822537</elem>
						<elem Type="unsigned int">519822537</elem>
						<elem Type="unsigned int">519822537</elem>
						<elem Type="unsigned int">519822553</elem>
						<elem Type="unsigned int">519822553</elem>
						<elem Type="unsigned int">519822569</elem>
						<elem Type="unsigned int">519822569</elem>
						<elem Type="unsigned int">519822569</elem>
						<elem Type="unsigned int">519822569</elem>
						<elem Type="unsigned int">519822584</elem>
						<elem Type="unsigned int">519822584</elem>
						<elem Type="unsigned int">519822584</elem>
						<elem Type="unsigned int">519822600</elem>
						<elem Type="unsigned int">519822600</elem>
						<elem Type="unsigned int">519822600</elem>
						<elem Type="unsigned int">519822615</elem>
						<elem Type="unsigned int">519822615</elem>
						<elem Type="unsigned int">519822615</elem>
						<elem Type="unsigned int">519822615</elem>
						<elem Type="unsigned int">519822631</elem>
						<elem Type="unsigned int">519822631</elem>
						<elem Type="unsigned int">519822631</elem>
						<elem Type="unsigned int">519822647</elem>
						<elem Type="unsigned int">519822647</elem>
						<elem Type="unsigned int">519822647</elem>
						<elem Type="unsigned int">519822662</elem>
						<elem Type="unsigned int">519822662</elem>
						<elem Type="unsigned int">519822662</elem>
						<elem Type="unsigned int">519822662</elem>
						<elem Type="unsigned int">519822678</elem>
						<elem Type="unsigned int">519822678</elem>
						<elem Type="unsigned int">519822678</elem>
						<elem Type="unsigned int">519822693</elem>
						<elem Type="unsigned int">519822709</elem>
						<elem Type="unsigned int">519822709</elem>
						<elem Type="unsigned int">519822709</elem>
						<elem Type="unsigned int">519822709</elem>
						<elem Type="unsigned int">519822725</elem>
						<elem Type="unsigned int">519822725</elem>
						<elem Type="unsigned int">519822740</elem>
						<elem Type="unsigned int">519822740</elem>
						<elem Type="unsigned int">519822740</elem>
						<elem Type="unsigned int">519822740</elem>
						<elem Type="unsigned int">519822756</elem>
						<elem Type="unsigned int">519822756</elem>
						<elem Type="unsigned int">519822771</elem>
						<elem Type="unsigned int">519822771</elem>
						<elem Type="unsigned int">519822771</elem>
					</AnglesTimes>
					<FoundMaxForce Type="double" PType="258">-10000</FoundMaxForce>
					<FoundMaxSpeed Type="double" PType="258">-10000</FoundMaxSpeed>
					<FoundMinForce Type="double" PType="258">10000</FoundMinForce>
					<FoundMinSpeed Type="double" PType="258">10000</FoundMinSpeed>
					<InputVoltage Type="double" PType="258">6.38275e-39</InputVoltage>
					<NumAnglesHistory Type="unsigned int" PType="258">2</NumAnglesHistory>
					<OutputVoltage Type="double" PType="258">3.2552e-38</OutputVoltage>
					<PreviousAngles Type="std::vector" Size="61" PType="258">
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
						<elem Type="double">-0.359057</elem>
					</PreviousAngles>
					<PulseState Type="std::vector" Size="0" PType="258"/>
				</State>
				<Components/>
			</WPhysicalManipulator>
			<DCEngine Class="NDCEngine">
				<State>
					<Angle Type="double" PType="258">-0.00889511</Angle>
				</State>
				<Components/>
			</DCEngine>
			<EngineControlRangeAfferent Class="NNewSimplestAfferentBranchedEngineControl5">
				<State>
					<MinAfferentRange Type="double" PType="258">0.1</MinAfferentRange>
				</State>
				<Components>
					<MotionElement0 Class="NNewSimplestAfferentBranchedMotionElement">
						<State>
							<NetStructure Type="std::vector" Size="0" PType="258"/>
						</State>
						<Components>
							<Motoneuron1 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron1>
							<Motoneuron2 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="6" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="6" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="6" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="6" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron2>
							<PostAfferent14 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="14" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="14" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent14>
							<PostAfferent24 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="14" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="14" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent24>
							<Afferent_II1 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II1>
							<Afferent_II2 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II2>
						</Components>
					</MotionElement0>
					<MotionElement1 Class="NNewSimplestAfferentBranchedMotionElement">
						<State>
							<NetStructure Type="std::vector" Size="0" PType="258"/>
						</State>
						<Components>
							<Motoneuron1 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron1>
							<Motoneuron2 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="6" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="6" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="6" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="6" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron2>
							<PostAfferent14 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="13" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="13" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent14>
							<PostAfferent24 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="13" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="13" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent24>
							<Afferent_II1 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II1>
							<Afferent_II2 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II2>
						</Components>
					</MotionElement1>
					<MotionElement2 Class="NNewSimplestAfferentBranchedMotionElement">
						<State>
							<NetStructure Type="std::vector" Size="0" PType="258"/>
						</State>
						<Components>
							<Motoneuron1 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="4" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="4" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="4" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="4" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron1>
							<Motoneuron2 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron2>
							<PostAfferent14 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="9" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="9" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent14>
							<PostAfferent24 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="4" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="4" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="9" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="9" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent24>
							<Afferent_II1 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II1>
							<Afferent_II2 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II2>
						</Components>
					</MotionElement2>
					<MotionElement3 Class="NNewSimplestAfferentBranchedMotionElement">
						<State>
							<NetStructure Type="std::vector" Size="0" PType="258"/>
						</State>
						<Components>
							<Motoneuron1 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron1>
							<Motoneuron2 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="2" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="2" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="2" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="2" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron2>
							<PostAfferent14 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="5" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="5" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent14>
							<PostAfferent24 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="5" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="5" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent24>
							<Afferent_II1 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II1>
							<Afferent_II2 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II2>
						</Components>
					</MotionElement3>
					<MotionElement4 Class="NNewSimplestAfferentBranchedMotionElement">
						<State>
							<NetStructure Type="std::vector" Size="0" PType="258"/>
						</State>
						<Components>
							<Motoneuron1 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron1>
							<Motoneuron2 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron2>
							<PostAfferent14 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="3" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="3" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent14>
							<PostAfferent24 Class="NNewSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<LTMembrane Class="NPLTZoneSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</LTMembrane>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="3" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="3" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent24>
							<Afferent_II1 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II1>
							<Afferent_II2 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II2>
						</Components>
					</MotionElement4>
					<IIPosAfferentGenerator Class="NPGenerator">
						<State>
							<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
							<PulseCounter Type="int" PType="258">0</PulseCounter>
							<RandomFrequency Type="double" PType="258">0</RandomFrequency>
						</State>
						<Components/>
					</IIPosAfferentGenerator>
					<IINegAfferentGenerator Class="NPGenerator">
						<State>
							<AvgFrequencyCounter Type="std::list" Size="103" PType="258">
								<elem Type="double">604.74</elem>
								<elem Type="double">604.788</elem>
								<elem Type="double">604.837</elem>
								<elem Type="double">604.885</elem>
								<elem Type="double">604.934</elem>
								<elem Type="double">604.982</elem>
								<elem Type="double">605.031</elem>
								<elem Type="double">605.08</elem>
								<elem Type="double">605.128</elem>
								<elem Type="double">605.177</elem>
								<elem Type="double">605.225</elem>
								<elem Type="double">605.274</elem>
								<elem Type="double">605.322</elem>
								<elem Type="double">605.37</elem>
								<elem Type="double">605.419</elem>
								<elem Type="double">605.467</elem>
								<elem Type="double">605.516</elem>
								<elem Type="double">605.564</elem>
								<elem Type="double">605.613</elem>
								<elem Type="double">605.662</elem>
								<elem Type="double">605.71</elem>
								<elem Type="double">605.759</elem>
								<elem Type="double">605.807</elem>
								<elem Type="double">605.856</elem>
								<elem Type="double">605.904</elem>
								<elem Type="double">605.952</elem>
								<elem Type="double">606.001</elem>
								<elem Type="double">606.049</elem>
								<elem Type="double">606.098</elem>
								<elem Type="double">606.146</elem>
								<elem Type="double">606.195</elem>
								<elem Type="double">606.244</elem>
								<elem Type="double">606.292</elem>
								<elem Type="double">606.341</elem>
								<elem Type="double">606.389</elem>
								<elem Type="double">606.438</elem>
								<elem Type="double">606.486</elem>
								<elem Type="double">606.534</elem>
								<elem Type="double">606.583</elem>
								<elem Type="double">606.631</elem>
								<elem Type="double">606.68</elem>
								<elem Type="double">606.729</elem>
								<elem Type="double">606.777</elem>
								<elem Type="double">606.826</elem>
								<elem Type="double">606.874</elem>
								<elem Type="double">606.923</elem>
								<elem Type="double">606.971</elem>
								<elem Type="double">607.019</elem>
								<elem Type="double">607.068</elem>
								<elem Type="double">607.116</elem>
								<elem Type="double">607.165</elem>
								<elem Type="double">607.213</elem>
								<elem Type="double">607.262</elem>
								<elem Type="double">607.311</elem>
								<elem Type="double">607.359</elem>
								<elem Type="double">607.408</elem>
								<elem Type="double">607.456</elem>
								<elem Type="double">607.505</elem>
								<elem Type="double">607.553</elem>
								<elem Type="double">607.601</elem>
								<elem Type="double">607.65</elem>
								<elem Type="double">607.698</elem>
								<elem Type="double">607.747</elem>
								<elem Type="double">607.795</elem>
								<elem Type="double">607.844</elem>
								<elem Type="double">607.893</elem>
								<elem Type="double">607.941</elem>
								<elem Type="double">607.99</elem>
								<elem Type="double">608.038</elem>
								<elem Type="double">608.087</elem>
								<elem Type="double">608.135</elem>
								<elem Type="double">608.183</elem>
								<elem Type="double">608.232</elem>
								<elem Type="double">608.28</elem>
								<elem Type="double">608.329</elem>
								<elem Type="double">608.378</elem>
								<elem Type="double">608.426</elem>
								<elem Type="double">608.475</elem>
								<elem Type="double">608.523</elem>
								<elem Type="double">608.572</elem>
								<elem Type="double">608.62</elem>
								<elem Type="double">608.668</elem>
								<elem Type="double">608.717</elem>
								<elem Type="double">608.765</elem>
								<elem Type="double">608.814</elem>
								<elem Type="double">608.862</elem>
								<elem Type="double">608.911</elem>
								<elem Type="double">608.96</elem>
								<elem Type="double">609.008</elem>
								<elem Type="double">609.057</elem>
								<elem Type="double">609.105</elem>
								<elem Type="double">609.154</elem>
								<elem Type="double">609.202</elem>
								<elem Type="double">609.25</elem>
								<elem Type="double">609.299</elem>
								<elem Type="double">609.347</elem>
								<elem Type="double">609.396</elem>
								<elem Type="double">609.444</elem>
								<elem Type="double">609.493</elem>
								<elem Type="double">609.542</elem>
								<elem Type="double">609.59</elem>
								<elem Type="double">609.639</elem>
								<elem Type="double">609.687</elem>
							</AvgFrequencyCounter>
							<PulseCounter Type="int" PType="258">0</PulseCounter>
							<RandomFrequency Type="double" PType="258">0</RandomFrequency>
						</State>
						<Components/>
					</IINegAfferentGenerator>
					<NManipulatorSource1 Class="NManipulatorSource">
						<State/>
						<Components/>
					</NManipulatorSource1>
					<NManipulatorInput1 Class="NManipulatorInput">
						<State/>
						<Components/>
					</NManipulatorInput1>
					<Pac Class="NPac">
						<State>
							<PreOutput Type="std::vector" Size="0" PType="258"/>
						</State>
						<Components/>
					</Pac>
					<II_NegIntervalSeparator1 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_NegIntervalSeparator1>
					<II_NegIntervalSeparator2 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_NegIntervalSeparator2>
					<II_NegIntervalSeparator3 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_NegIntervalSeparator3>
					<II_NegIntervalSeparator4 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_NegIntervalSeparator4>
					<II_NegIntervalSeparator5 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_NegIntervalSeparator5>
					<II_PosIntervalSeparator1 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_PosIntervalSeparator1>
					<II_PosIntervalSeparator2 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_PosIntervalSeparator2>
					<II_PosIntervalSeparator3 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_PosIntervalSeparator3>
					<II_PosIntervalSeparator4 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_PosIntervalSeparator4>
					<II_PosIntervalSeparator5 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_PosIntervalSeparator5>
				</Components>
			</EngineControlRangeAfferent>
		</Components>
	</Model>
</SaveProperties>
