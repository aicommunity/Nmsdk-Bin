<ClassDescription>
	<ClassName>NSignalEstimation</ClassName>
	<Header>Зонирование сигнала</Header>
	<Description>Временной диапазон разделяется на NumZones зон, каждая из которых соответсвует интервалу, ограниченному значениями, указанными в UpperLimitsOfZones. Каждой зоне соответствует нейрон, который среагирует, если сигнал попал в его зону</Description>
	<Properties>
		<Activity>
			<Header></Header>
			<Description></Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</Activity>
		<Amplitude>
			<Header>Амплитуда импульсов</Header>
			<Description></Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</Amplitude>
		<CalculationDurationThreshold>
			<Header></Header>
			<Description></Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</CalculationDurationThreshold>
		<Coord>
			<Header></Header>
			<Description></Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>769</PropertyType>
		</Coord>
		<DebugSysEventsMask>
			<Header></Header>
			<Description></Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>769</PropertyType>
		</DebugSysEventsMask>
		<DelaysSignal>
			<Header>Задержка</Header>
			<Description>Задержка сигнала, который будет зонироваться</Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</DelaysSignal>
		<DelaysSinchro>
			<Header>Задержка</Header>
			<Description>Задержка синхронизирующего импульса</Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</DelaysSinchro>
		<Frequency>
			<Header>Частота</Header>
			<Description>Частота генерации (Гц) всех компонентов</Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</Frequency>
		<GeneratorClassName>
			<Header></Header>
			<Description></Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</GeneratorClassName>
		<Id>
			<Header></Header>
			<Description></Description>
			<Type></Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>513</PropertyType>
		</Id>
		<Input>
			<Header>Входной сигнал</Header>
			<Description>Вход для зонируемого сигнала с внешнего источника. Чтобы использовать импульс от внешнего источника, необходимо построить связь к этому входу компонента и поднять флаг UseTransitSignal</Description>
			<Type>| ptPubInput | | ptPubState | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>266</PropertyType>
		</Input>
		<LTZThreshold>
			<Header>Порог LTZone</Header>
			<Description>Используемый порог низкопороговой зоны нейронов</Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</LTZThreshold>
		<MaxCalculationDuration>
			<Header></Header>
			<Description></Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</MaxCalculationDuration>
		<MemoryMonitor>
			<Header></Header>
			<Description></Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>769</PropertyType>
		</MemoryMonitor>
		<Name>
			<Header></Header>
			<Description></Description>
			<Type></Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>513</PropertyType>
		</Name>
		<NeuronClassName>
			<Header>Имя класса нейронов</Header>
			<Description>Имя класса нейронов, которые зонируют сигнал</Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</NeuronClassName>
		<NumZones>
			<Header>Количество зон</Header>
			<Description>Количество интервалов, на которые будет зонироваться сигнал</Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</NumZones>
		<PulseLength>
			<Header>Длительность импульсов (с)</Header>
			<Description>Длительность импульсов (с)</Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</PulseLength>
		<Sinchro>
			<Header>Синхронизирующий импульс</Header>
			<Description>Вход для синхронизирующего импульса с внешнего источника. Чтобы использовать этот вход, необходимо построить связь к этому нему и поднять флаг UseTransitSinchro</Description>
			<Type>| ptPubInput | | ptPubState | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>266</PropertyType>
		</Sinchro>
		<StepDuration>
			<Header></Header>
			<Description></Description>
			<Type>| ptPubState | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>770</PropertyType>
		</StepDuration>
		<TimeStep>
			<Header></Header>
			<Description></Description>
			<Type></Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>513</PropertyType>
		</TimeStep>
		<UpperLimitsOfZones>
			<Header>Ограничения зон (с)</Header>
			<Description>Верхние ограничения для каждой из областей зонирования. Верхнее ограничение зоны является нижним ограничением другой. Для самой первой зоны нижней границей считается 0.0 с</Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</UpperLimitsOfZones>
		<UseTransitSignal>
			<Header>Внешний зонируемый сигнал</Header>
			<Description>Признак необходимости транзита зонируемого сигнала от внешнего источника</Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</UseTransitSignal>
		<UseTransitSinchro>
			<Header>Внешний синхронизирующий импульс</Header>
			<Description>Признак необходимости транзита сигнала на синхронизирующий генератор от внешнего источника</Description>
			<Type>| ptPubParameter | </Type>
			<DataSelectionType>0</DataSelectionType>
			<ValueList Type="std::vector" Size="2" elemType="std::string">
				<elem Type="std::string"></elem>
				<elem Type="std::string"></elem>
			</ValueList>
			<PropertyType>257</PropertyType>
		</UseTransitSinchro>
	</Properties>
	<Favorites>
		<DelaysSignal>
			<Path>{CompName}:DelaysSignal</Path>
		</DelaysSignal>
		<DelaysSinchro>
			<Path>{CompName}:DelaysSinchro</Path>
		</DelaysSinchro>
		<Frequency>
			<Path>{CompName}:Frequency</Path>
		</Frequency>
		<NumZones>
			<Path>{CompName}:NumZones</Path>
		</NumZones>
		<UpperLimitsOfZones>
			<Path>{CompName}:UpperLimitsOfZones</Path>
		</UpperLimitsOfZones>
		<UseTransitSignal>
			<Path>{CompName}:UseTransitSignal</Path>
		</UseTransitSignal>
		<UseTransitSinchro>
			<Path>{CompName}:UseTransitSinchro</Path>
		</UseTransitSinchro>
	</Favorites>
</ClassDescription>
