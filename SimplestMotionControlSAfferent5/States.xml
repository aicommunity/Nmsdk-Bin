<SaveProperties ModelName="Model">
	<Model Class="NModel">
		<State/>
		<Components>
			<WPhysicalManipulator Class="NWPhysicalManipulator">
				<State>
					<AngleSpeed Type="double" PType="258">0</AngleSpeed>
					<AnglesHistoryTime Type="double" PType="258">0.3</AnglesHistoryTime>
					<AnglesTimes Type="std::vector" Size="56" PType="258">
						<elem Type="unsigned int">1974897683</elem>
						<elem Type="unsigned int">1974897683</elem>
						<elem Type="unsigned int">1974897683</elem>
						<elem Type="unsigned int">1974897699</elem>
						<elem Type="unsigned int">1974897699</elem>
						<elem Type="unsigned int">1974897714</elem>
						<elem Type="unsigned int">1974897714</elem>
						<elem Type="unsigned int">1974897714</elem>
						<elem Type="unsigned int">1974897730</elem>
						<elem Type="unsigned int">1974897730</elem>
						<elem Type="unsigned int">1974897730</elem>
						<elem Type="unsigned int">1974897745</elem>
						<elem Type="unsigned int">1974897745</elem>
						<elem Type="unsigned int">1974897745</elem>
						<elem Type="unsigned int">1974897761</elem>
						<elem Type="unsigned int">1974897761</elem>
						<elem Type="unsigned int">1974897761</elem>
						<elem Type="unsigned int">1974897777</elem>
						<elem Type="unsigned int">1974897777</elem>
						<elem Type="unsigned int">1974897777</elem>
						<elem Type="unsigned int">1974897792</elem>
						<elem Type="unsigned int">1974897792</elem>
						<elem Type="unsigned int">1974897808</elem>
						<elem Type="unsigned int">1974897808</elem>
						<elem Type="unsigned int">1974897808</elem>
						<elem Type="unsigned int">1974897839</elem>
						<elem Type="unsigned int">1974897839</elem>
						<elem Type="unsigned int">1974897839</elem>
						<elem Type="unsigned int">1974897839</elem>
						<elem Type="unsigned int">1974897855</elem>
						<elem Type="unsigned int">1974897855</elem>
						<elem Type="unsigned int">1974897855</elem>
						<elem Type="unsigned int">1974897855</elem>
						<elem Type="unsigned int">1974897855</elem>
						<elem Type="unsigned int">1974897870</elem>
						<elem Type="unsigned int">1974897870</elem>
						<elem Type="unsigned int">1974897886</elem>
						<elem Type="unsigned int">1974897886</elem>
						<elem Type="unsigned int">1974897886</elem>
						<elem Type="unsigned int">1974897901</elem>
						<elem Type="unsigned int">1974897901</elem>
						<elem Type="unsigned int">1974897901</elem>
						<elem Type="unsigned int">1974897917</elem>
						<elem Type="unsigned int">1974897917</elem>
						<elem Type="unsigned int">1974897917</elem>
						<elem Type="unsigned int">1974897933</elem>
						<elem Type="unsigned int">1974897933</elem>
						<elem Type="unsigned int">1974897933</elem>
						<elem Type="unsigned int">1974897948</elem>
						<elem Type="unsigned int">1974897948</elem>
						<elem Type="unsigned int">1974897948</elem>
						<elem Type="unsigned int">1974897964</elem>
						<elem Type="unsigned int">1974897964</elem>
						<elem Type="unsigned int">1974897964</elem>
						<elem Type="unsigned int">1974897979</elem>
						<elem Type="unsigned int">1974897979</elem>
					</AnglesTimes>
					<FoundMaxForce Type="double" PType="258">-10000</FoundMaxForce>
					<FoundMaxSpeed Type="double" PType="258">-10000</FoundMaxSpeed>
					<FoundMinForce Type="double" PType="258">10000</FoundMinForce>
					<FoundMinSpeed Type="double" PType="258">10000</FoundMinSpeed>
					<InputVoltage Type="double" PType="258">7.57306e-27</InputVoltage>
					<NumAnglesHistory Type="unsigned int" PType="258">2</NumAnglesHistory>
					<OutputVoltage Type="double" PType="258">3.86226e-26</OutputVoltage>
					<PreviousAngles Type="std::vector" Size="56" PType="258">
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
						<elem Type="double">-0.0190886</elem>
					</PreviousAngles>
					<PulseState Type="std::vector" Size="0" PType="258"/>
				</State>
				<Components/>
			</WPhysicalManipulator>
			<DCEngine Class="NDCEngine">
				<State>
					<Angle Type="double" PType="258">0.26321</Angle>
				</State>
				<Components/>
			</DCEngine>
			<EngineControlRangeAfferent Class="NSimplestAfferentBranchedEngineControl5">
				<State/>
				<Components>
					<MotionElement0 Class="NSimplestAfferentBranchedMotionElement">
						<State>
							<NetStructure Type="std::vector" Size="0" PType="258"/>
						</State>
						<Components>
							<Motoneuron1 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="8" PType="258">
												<elem Type="double">16.3155</elem>
												<elem Type="double">16.333</elem>
												<elem Type="double">16.35</elem>
												<elem Type="double">16.367</elem>
												<elem Type="double">16.384</elem>
												<elem Type="double">16.401</elem>
												<elem Type="double">16.419</elem>
												<elem Type="double">16.4715</elem>
											</AvgFrequencyCounter>
											<NeuralPotential Type="double" PType="258">-1.12564e-06</NeuralPotential>
											<PrePotential Type="double" PType="258">-2.14073e-06</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">1.42581e-08</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron1>
							<Motoneuron2 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">-1.98896e-08</NeuralPotential>
											<PrePotential Type="double" PType="258">-3.57371e-08</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">1.42581e-08</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron2>
							<PostAfferent14 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="5" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="5" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent14>
							<PostAfferent24 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="5" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="5" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent24>
							<Afferent_II1 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">105.409</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II1>
							<Afferent_II2 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II2>
						</Components>
					</MotionElement0>
					<MotionElement1 Class="NSimplestAfferentBranchedMotionElement">
						<State>
							<NetStructure Type="std::vector" Size="0" PType="258"/>
						</State>
						<Components>
							<Motoneuron1 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron1>
							<Motoneuron2 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron2>
							<PostAfferent14 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="4" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="4" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent14>
							<PostAfferent24 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="4" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="4" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent24>
							<Afferent_II1 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II1>
							<Afferent_II2 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II2>
						</Components>
					</MotionElement1>
					<MotionElement2 Class="NSimplestAfferentBranchedMotionElement">
						<State>
							<NetStructure Type="std::vector" Size="0" PType="258"/>
						</State>
						<Components>
							<Motoneuron1 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron1>
							<Motoneuron2 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron2>
							<PostAfferent14 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="3" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="3" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent14>
							<PostAfferent24 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="3" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="3" PType="258">
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent24>
							<Afferent_II1 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II1>
							<Afferent_II2 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II2>
						</Components>
					</MotionElement2>
					<MotionElement3 Class="NSimplestAfferentBranchedMotionElement">
						<State>
							<NetStructure Type="std::vector" Size="0" PType="258"/>
						</State>
						<Components>
							<Motoneuron1 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron1>
							<Motoneuron2 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron2>
							<PostAfferent14 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent14>
							<PostAfferent24 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent24>
							<Afferent_II1 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II1>
							<Afferent_II2 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II2>
						</Components>
					</MotionElement3>
					<MotionElement4 Class="NSimplestAfferentBranchedMotionElement">
						<State>
							<NetStructure Type="std::vector" Size="0" PType="258"/>
						</State>
						<Components>
							<Motoneuron1 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron1>
							<Motoneuron2 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
									<PNeuronMembrane2 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane2>
									<PNeuronMembrane3 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane3>
									<PNeuronMembrane4 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane4>
									<PNeuronMembrane5 Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="1" PType="258">
														<elem Type="double">0</elem>
													</PreOutput>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane5>
								</Components>
							</Motoneuron2>
							<PostAfferent14 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent14>
							<PostAfferent24 Class="NSynSPNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<PNeuronPosCGenerator Class="NPNeuronPosCGenerator">
										<State/>
										<Components/>
									</PNeuronPosCGenerator>
									<PNeuronNegCGenerator Class="NPNeuronNegCGenerator">
										<State/>
										<Components/>
									</PNeuronNegCGenerator>
									<PNeuronMembrane Class="NPSynNeuronMembrane">
										<State>
											<Feedback Type="double" PType="258">0</Feedback>
										</State>
										<Components>
											<PosChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</PosChannel>
											<NegChannel Class="NPSynNeuronChannel">
												<State>
													<PreOutput Type="std::vector" Size="0" PType="258"/>
												</State>
												<Components/>
											</NegChannel>
										</Components>
									</PNeuronMembrane>
								</Components>
							</PostAfferent24>
							<Afferent_II1 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II1>
							<Afferent_II2 Class="NSimpleAfferentNeuron">
								<State>
									<NetStructure Type="std::vector" Size="0" PType="258"/>
									<NumActiveNegInputs Type="double" PType="258">0</NumActiveNegInputs>
									<NumActiveOutputs Type="double" PType="258">0</NumActiveOutputs>
									<NumActivePosInputs Type="double" PType="258">0</NumActivePosInputs>
								</State>
								<Components>
									<LTZone Class="NPSimpleLTZone">
										<State>
											<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
											<NeuralPotential Type="double" PType="258">0</NeuralPotential>
											<PrePotential Type="double" PType="258">0</PrePotential>
											<PulseCounter Type="int" PType="258">0</PulseCounter>
											<PulseFlag Type="bool" PType="258">0</PulseFlag>
										</State>
										<Components/>
									</LTZone>
									<Receptor Class="NReceptor">
										<State/>
										<Components/>
									</Receptor>
								</Components>
							</Afferent_II2>
						</Components>
					</MotionElement4>
					<IIPosAfferentGenerator Class="NPGenerator">
						<State>
							<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
							<PulseCounter Type="int" PType="258">-44</PulseCounter>
							<RandomFrequency Type="double" PType="258">11</RandomFrequency>
						</State>
						<Components/>
					</IIPosAfferentGenerator>
					<IINegAfferentGenerator Class="NPGenerator">
						<State>
							<AvgFrequencyCounter Type="std::list" Size="15" PType="258">
								<elem Type="double">15.606</elem>
								<elem Type="double">15.6735</elem>
								<elem Type="double">15.741</elem>
								<elem Type="double">15.8085</elem>
								<elem Type="double">15.876</elem>
								<elem Type="double">15.9435</elem>
								<elem Type="double">16.011</elem>
								<elem Type="double">16.0785</elem>
								<elem Type="double">16.146</elem>
								<elem Type="double">16.2135</elem>
								<elem Type="double">16.281</elem>
								<elem Type="double">16.3485</elem>
								<elem Type="double">16.416</elem>
								<elem Type="double">16.4835</elem>
								<elem Type="double">16.551</elem>
							</AvgFrequencyCounter>
							<PulseCounter Type="int" PType="258">-87</PulseCounter>
							<RandomFrequency Type="double" PType="258">0</RandomFrequency>
						</State>
						<Components/>
					</IINegAfferentGenerator>
					<AfferentSource1 Class="NCGenerator">
						<State/>
						<Components/>
					</AfferentSource1>
					<AfferentSource2 Class="NCGenerator">
						<State/>
						<Components/>
					</AfferentSource2>
					<LengthSource1 Class="NCGenerator">
						<State/>
						<Components/>
					</LengthSource1>
					<Renshow1ActivatorGenerator Class="NPGenerator">
						<State>
							<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
							<PulseCounter Type="int" PType="258">2</PulseCounter>
							<RandomFrequency Type="double" PType="258">0</RandomFrequency>
						</State>
						<Components/>
					</Renshow1ActivatorGenerator>
					<Renshow2ActivatorGenerator Class="NPGenerator">
						<State>
							<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
							<PulseCounter Type="int" PType="258">2</PulseCounter>
							<RandomFrequency Type="double" PType="258">0</RandomFrequency>
						</State>
						<Components/>
					</Renshow2ActivatorGenerator>
					<Renshow1DeactivatorGenerator Class="NPGenerator">
						<State>
							<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
							<PulseCounter Type="int" PType="258">2</PulseCounter>
							<RandomFrequency Type="double" PType="258">0</RandomFrequency>
						</State>
						<Components/>
					</Renshow1DeactivatorGenerator>
					<Renshow2DeactivatorGenerator Class="NPGenerator">
						<State>
							<AvgFrequencyCounter Type="std::list" Size="0" PType="258"/>
							<PulseCounter Type="int" PType="258">2</PulseCounter>
							<RandomFrequency Type="double" PType="258">0</RandomFrequency>
						</State>
						<Components/>
					</Renshow2DeactivatorGenerator>
					<Motoneuron1FrequencyReceiver Class="NFrequencyReceiver">
						<State/>
						<Components/>
					</Motoneuron1FrequencyReceiver>
					<Motoneuron2FrequencyReceiver Class="NFrequencyReceiver">
						<State/>
						<Components/>
					</Motoneuron2FrequencyReceiver>
					<NManipulatorSource1 Class="NManipulatorSource">
						<State/>
						<Components/>
					</NManipulatorSource1>
					<NManipulatorInput1 Class="NManipulatorInput">
						<State/>
						<Components/>
					</NManipulatorInput1>
					<Pac Class="NPac">
						<State>
							<PreOutput Type="std::vector" Size="10" PType="258">
								<elem Type="std::vector" Size="1">
									<elem Type="double">2.6827e-06</elem>
								</elem>
								<elem Type="std::vector" Size="1">
									<elem Type="double">0</elem>
								</elem>
								<elem Type="std::vector" Size="1">
									<elem Type="double">0</elem>
								</elem>
								<elem Type="std::vector" Size="1">
									<elem Type="double">0</elem>
								</elem>
								<elem Type="std::vector" Size="1">
									<elem Type="double">0</elem>
								</elem>
								<elem Type="std::vector" Size="1">
									<elem Type="double">0</elem>
								</elem>
								<elem Type="std::vector" Size="1">
									<elem Type="double">0</elem>
								</elem>
								<elem Type="std::vector" Size="1">
									<elem Type="double">0</elem>
								</elem>
								<elem Type="std::vector" Size="1">
									<elem Type="double">0</elem>
								</elem>
								<elem Type="std::vector" Size="1">
									<elem Type="double">0</elem>
								</elem>
							</PreOutput>
						</State>
						<Components/>
					</Pac>
					<Ib_NegIntervalSeparator1 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ib_NegIntervalSeparator1>
					<Ib_NegIntervalSeparator2 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ib_NegIntervalSeparator2>
					<Ib_NegIntervalSeparator3 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ib_NegIntervalSeparator3>
					<Ib_NegIntervalSeparator4 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ib_NegIntervalSeparator4>
					<Ib_NegIntervalSeparator5 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ib_NegIntervalSeparator5>
					<Ib_PosIntervalSeparator1 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ib_PosIntervalSeparator1>
					<Ib_PosIntervalSeparator2 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ib_PosIntervalSeparator2>
					<Ib_PosIntervalSeparator3 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ib_PosIntervalSeparator3>
					<Ib_PosIntervalSeparator4 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ib_PosIntervalSeparator4>
					<Ib_PosIntervalSeparator5 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ib_PosIntervalSeparator5>
					<II_NegIntervalSeparator1 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_NegIntervalSeparator1>
					<II_NegIntervalSeparator2 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_NegIntervalSeparator2>
					<II_NegIntervalSeparator3 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_NegIntervalSeparator3>
					<II_NegIntervalSeparator4 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_NegIntervalSeparator4>
					<II_NegIntervalSeparator5 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_NegIntervalSeparator5>
					<II_PosIntervalSeparator1 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_PosIntervalSeparator1>
					<II_PosIntervalSeparator2 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_PosIntervalSeparator2>
					<II_PosIntervalSeparator3 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_PosIntervalSeparator3>
					<II_PosIntervalSeparator4 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_PosIntervalSeparator4>
					<II_PosIntervalSeparator5 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</II_PosIntervalSeparator5>
					<Ia_NegIntervalSeparator1 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ia_NegIntervalSeparator1>
					<Ia_NegIntervalSeparator2 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ia_NegIntervalSeparator2>
					<Ia_NegIntervalSeparator3 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ia_NegIntervalSeparator3>
					<Ia_NegIntervalSeparator4 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ia_NegIntervalSeparator4>
					<Ia_NegIntervalSeparator5 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ia_NegIntervalSeparator5>
					<Ia_PosIntervalSeparator1 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ia_PosIntervalSeparator1>
					<Ia_PosIntervalSeparator2 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ia_PosIntervalSeparator2>
					<Ia_PosIntervalSeparator3 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ia_PosIntervalSeparator3>
					<Ia_PosIntervalSeparator4 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ia_PosIntervalSeparator4>
					<Ia_PosIntervalSeparator5 Class="NIntervalSeparator">
						<State/>
						<Components/>
					</Ia_PosIntervalSeparator5>
					<PosMNFrequencyReceiver1 Class="NFrequencyReceiver">
						<State/>
						<Components/>
					</PosMNFrequencyReceiver1>
					<NegMNFrequencyReceiver1 Class="NFrequencyReceiver">
						<State/>
						<Components/>
					</NegMNFrequencyReceiver1>
					<PosMNFrequencyReceiver2 Class="NFrequencyReceiver">
						<State/>
						<Components/>
					</PosMNFrequencyReceiver2>
					<NegMNFrequencyReceiver2 Class="NFrequencyReceiver">
						<State/>
						<Components/>
					</NegMNFrequencyReceiver2>
					<PosMNFrequencyReceiver3 Class="NFrequencyReceiver">
						<State/>
						<Components/>
					</PosMNFrequencyReceiver3>
					<NegMNFrequencyReceiver3 Class="NFrequencyReceiver">
						<State/>
						<Components/>
					</NegMNFrequencyReceiver3>
					<PosMNFrequencyReceiver4 Class="NFrequencyReceiver">
						<State/>
						<Components/>
					</PosMNFrequencyReceiver4>
					<NegMNFrequencyReceiver4 Class="NFrequencyReceiver">
						<State/>
						<Components/>
					</NegMNFrequencyReceiver4>
					<PosMNFrequencyReceiver5 Class="NFrequencyReceiver">
						<State/>
						<Components/>
					</PosMNFrequencyReceiver5>
					<NegMNFrequencyReceiver5 Class="NFrequencyReceiver">
						<State/>
						<Components/>
					</NegMNFrequencyReceiver5>
				</Components>
			</EngineControlRangeAfferent>
		</Components>
	</Model>
</SaveProperties>
